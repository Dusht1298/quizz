/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techquiz.gui;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import techquiz.dao.PerformanceDao;
import techquiz.dao.QuestionDao;
import techquiz.pojo.Answer;
import techquiz.pojo.AnswerStore;
import techquiz.pojo.ExamPojo;
import techquiz.pojo.Performance;
import techquiz.pojo.QuestionPojo;
import techquiz.pojo.QuestionStore;
import techquiz.pojo.UserProfile;

/**
 *
 * @author DELL
 */
public class TakeTestFrame extends javax.swing.JFrame {

    private ExamPojo exam;
    private QuestionStore qstore;
    private AnswerStore astore;
    int sec1,count,min1;
    
    private int qno,pos=0;

    public TakeTestFrame() {
        initComponents();
                this.setLocationRelativeTo(null);
        
        qstore=new QuestionStore();
        astore=new AnswerStore();
        qno=1;
        lblQno.setText(""+qno);
         new Thread(){
            public void run(){
                for(sec1=Calendar.SECOND;true;){
                    Calendar cal=new GregorianCalendar();
                    int hour=cal.get(Calendar.HOUR);
                    int min=cal.get(Calendar.MINUTE);
                    int sec=cal.get(Calendar.SECOND);
                    if(sec1!=sec){
                        if(count>59){
                             count=0;
                             min1++;
                           
                        }
                        count++;
                    }
                    sec1=sec;
                    int AM_PM=cal.get(Calendar.AM_PM);
                    String time="";
                    if(AM_PM==0){
                    time=hour+":"+min+":"+sec+"AM";
                    Clock.setText(time);
                    }
                    else{
                     time=hour+":"+min+":"+sec+"PM";
                      Clock.setText(time);
                      
                    }
                    showtime.setText("00:"+min1+":"+count);
                }
            }
            
        }.start();

    }

    TakeTestFrame(ExamPojo exam) {
          this();
        this.exam=exam;
        lblTitle.setText(exam.getLanguage().toUpperCase()+" PAPER");
        loadQuestions();
        showQuestion();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblQno = new javax.swing.JLabel();
        txtQuestion = new javax.swing.JTextField();
        jrOption1 = new javax.swing.JRadioButton();
        jrOption2 = new javax.swing.JRadioButton();
        jrOption3 = new javax.swing.JRadioButton();
        jrOption4 = new javax.swing.JRadioButton();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Clock = new javax.swing.JLabel();
        showtime = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setBackground(new java.awt.Color(153, 153, 153));
        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 0));
        jPanel1.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 24, 150, 30));

        lblQno.setBackground(new java.awt.Color(204, 204, 204));
        lblQno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblQno.setOpaque(true);
        jPanel1.add(lblQno, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 30, 20));

        txtQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuestionActionPerformed(evt);
            }
        });
        jPanel1.add(txtQuestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 225, 33));

        jrOption1.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jrOption1);
        jrOption1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrOption1.setForeground(new java.awt.Color(0, 0, 204));
        jrOption1.setOpaque(false);
        jrOption1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrOption1ActionPerformed(evt);
            }
        });
        jPanel1.add(jrOption1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 110, 14));

        jrOption2.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jrOption2);
        jrOption2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrOption2.setForeground(new java.awt.Color(0, 0, 255));
        jrOption2.setOpaque(false);
        jPanel1.add(jrOption2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 110, 14));

        jrOption3.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrOption3);
        jrOption3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrOption3.setForeground(new java.awt.Color(0, 0, 153));
        jrOption3.setOpaque(false);
        jrOption3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrOption3ActionPerformed(evt);
            }
        });
        jPanel1.add(jrOption3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 130, 14));

        jrOption4.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jrOption4);
        jrOption4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrOption4.setForeground(new java.awt.Color(0, 0, 153));
        jrOption4.setOpaque(false);
        jPanel1.add(jrOption4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 280, 120, 14));

        btnNext.setText("next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        jPanel1.add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, -1, -1));

        btnPrevious.setText("previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrevious, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, -1, -1));

        btnCancel.setText("cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 370, -1, -1));

        btnDone.setText("done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });
        jPanel1.add(btnDone, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 370, -1, -1));

        jLabel1.setText("  Question No");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 80, 20));

        Clock.setBackground(new java.awt.Color(204, 204, 204));
        Clock.setFont(new java.awt.Font("DS-Digital", 1, 22)); // NOI18N
        Clock.setForeground(new java.awt.Color(0, 0, 204));
        jPanel1.add(Clock, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 110, 30));

        showtime.setBackground(new java.awt.Color(204, 204, 204));
        showtime.setFont(new java.awt.Font("DS-Digital", 1, 22)); // NOI18N
        showtime.setForeground(new java.awt.Color(0, 0, 153));
        jPanel1.add(showtime, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 210, 90, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("TIME");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 210, 50, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techquiz/gui/ll.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 510));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 530));

        jMenu1.setText("Back");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuestionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuestionActionPerformed

    private void jrOption1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrOption1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrOption1ActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
         String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
        QuestionPojo question=qstore.getQuestion(pos);
        String correctAnswer=question.getCorrectAnswer();
       Answer newanswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,
chosenAnswer,correctAnswer);
        System.out.println(newanswer);
        Answer answer=astore.getAnswerByQno(qno);
        if(answer==null)
            astore.addAnswer(newanswer);
        else{
            if(newanswer.getChosenAnswer().equals(
answer.getChosenAnswer())==false){
                int apos=astore.removeAnswer(answer);
                astore.setAnswerAt(apos, newanswer);
            }
        }
     }
        pos++;
        if(pos>=qstore.getCount())
        {
            pos=0;
        }
         qno++;         
        if(qno>qstore.getCount())
                qno=1;
        lblQno.setText(""+qno);
        showQuestion();

    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
               String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
        QuestionPojo question=qstore.getQuestion(pos);
        String correctAnswer=question.getCorrectAnswer();
        Answer newanswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
        System.out.println(newanswer);
        Answer answer=astore.getAnswerByQno(qno);
        if(answer==null)
            astore.addAnswer(newanswer);
        else{
            if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false){
                int apos=astore.removeAnswer(answer);
                astore.setAnswerAt(apos, newanswer);
            }
        }
     }
        pos--;
        if(pos<0)
        {
            pos=qstore.getCount()-1;
        }
      qno--;
        if(qno<=0)
        qno=qstore.getCount();
        lblQno.setText(""+qno);
        showQuestion();

    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        ChoosePaperFrame c=new ChoosePaperFrame();
            c.setVisible(true);
                  this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
               String userAnswer=getUserAnswer();
        if(userAnswer!=null){
        QuestionPojo question=qstore.getQuestion(pos);
        String correctAnswer=question.getCorrectAnswer();
        
                
        Answer newanswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,userAnswer,correctAnswer);
        System.out.println(newanswer);
        Answer answer=astore.getAnswerByQno(qno);
        if(answer==null)
            astore.addAnswer(newanswer);
        else{
            if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false){
                int apos=astore.removeAnswer(answer);
                astore.setAnswerAt(apos, newanswer);
            }
        }
        }
        int right=0,wrong=0;
        for(QuestionPojo question:qstore.getAllQuestions()){
            int qno=question.getQno();
            Answer answer=astore.getAnswerByQno(qno);
            if(answer==null)
                continue;
            else
            {
                String chosenAnswer1=answer.getChosenAnswer();
                String correctAnswer=answer.getCorrectAnswer();
                if(chosenAnswer1.equals(correctAnswer))
                    ++right;
                else
                    ++wrong;
                    
            }
            
        }
        String reportCard="Total Questions:"+qstore.getCount();
        reportCard+="\nRight Answers:"+right;
        reportCard+="\nWrong Answers:"+wrong;
        reportCard+="\nUnAttempted  :"+(qstore.getCount()-(right+wrong));
        reportCard+="\n Time Taken :"+"00"+min1+":"+sec1;
        JOptionPane.showMessageDialog(null, reportCard,"Your Result!",JOptionPane.INFORMATION_MESSAGE);
 try{
            Performance performance=new Performance(exam.getExamId(),exam.getLanguage(),
UserProfile.getUsername(),right,wrong,
(qstore.getCount()-(right+wrong)),
(double)right/qstore.getCount()*100);

            PerformanceDao.addPerformance(performance);
            JOptionPane.showMessageDialog(null, "Your performance has been successfully added to the database"," Performance Added!",JOptionPane.INFORMATION_MESSAGE);
            ChoosePaperFrame paperFrame=new ChoosePaperFrame();
            paperFrame.setVisible(true);
            this.dispose();
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error while connecting to DB!","Exception!",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnDoneActionPerformed

    private void jrOption3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrOption3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrOption3ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
     StudentOptions s=new StudentOptions();
     s.setVisible(true);
this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Clock;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jrOption1;
    private javax.swing.JRadioButton jrOption2;
    private javax.swing.JRadioButton jrOption3;
    private javax.swing.JRadioButton jrOption4;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel showtime;
    private javax.swing.JTextField txtQuestion;
    // End of variables declaration//GEN-END:variables

public void loadQuestions(){
 
        try{
                ArrayList<QuestionPojo> questionList=QuestionDao.getQuestionsByExamid(exam.getExamId());
                for(QuestionPojo obj:questionList){
                    qstore.addQuestion(obj);
                }
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "Error while connecting to DB!","Exception!",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }









}
    public void showQuestion(){

                QuestionPojo question=qstore.getQuestion(pos);
        buttonGroup1.clearSelection();
        txtQuestion.setText(question.getQuestion());
        jrOption1.setText(question.getAnswer1());
        jrOption2.setText(question.getAnswer2());
        jrOption3.setText(question.getAnswer3());
        jrOption4.setText(question.getAnswer4());
        Answer answer=astore.getAnswerByQno(qno);
        if(answer==null)
            return;
        String chosenAnswer=answer.getChosenAnswer();
        switch(chosenAnswer){
            case "Answer1":
                jrOption1.setSelected(true);
                break;
            case "Answer2":
                jrOption2.setSelected(true);
                break;
            case "Answer3":
                jrOption3.setSelected(true);
                break;
            case "Answer4":
                jrOption4.setSelected(true);
                break;
        }

        
    }
    
    public String getUserAnswer(){
            if(jrOption1.isSelected())
            return "Answer1";
        else if(jrOption2.isSelected())
            return "Answer2";
        else if(jrOption3.isSelected())
            return "Answer3";
        else if(jrOption4.isSelected())
            return "Answer4";
        else
            return null;

    
    }
    
}